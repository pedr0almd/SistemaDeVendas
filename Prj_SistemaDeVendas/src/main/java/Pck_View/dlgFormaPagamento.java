/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Pck_View;

import Pck_Utils.PedidoUtils;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class dlgFormaPagamento extends javax.swing.JDialog {

    private JTable tabelaPedido;

    public dlgFormaPagamento(java.awt.Frame parent, boolean modal, JTable tabelaPedido) {
        super(parent, modal);
        this.tabelaPedido = tabelaPedido;
        initComponents();
        mostrarValorTotal();
        configurarTabelaComIcones(tblFormasPagamento);
        configurarColunasTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbPagarDepois = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        btnConcluirVenda = new javax.swing.JButton();
        cbImprimirComprovante = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFormasPagamento = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        cbPagarDepois.setText("Pagar depois");
        cbPagarDepois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPagarDepoisActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Total a pagar");

        lblValorTotal.setBackground(new java.awt.Color(0, 0, 0));
        lblValorTotal.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblValorTotal.setForeground(new java.awt.Color(0, 0, 0));
        lblValorTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValorTotal.setText("R$ 0,00");

        btnConcluirVenda.setBackground(new java.awt.Color(51, 153, 255));
        btnConcluirVenda.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnConcluirVenda.setForeground(new java.awt.Color(255, 255, 255));
        btnConcluirVenda.setText("Concluir Venda");
        btnConcluirVenda.setBorderPainted(false);               // Remove borda
        btnConcluirVenda.setFocusPainted(false);                // Remove destaque de foco
        btnConcluirVenda.setContentAreaFilled(false);           // Remove preenchimento padrão
        btnConcluirVenda.setOpaque(true);  // Necessário para aplicar o fundo
        btnConcluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirVendaActionPerformed(evt);
            }
        });

        cbImprimirComprovante.setText("Imprimir comprovante");
        cbImprimirComprovante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbImprimirComprovanteActionPerformed(evt);
            }
        });

        tblFormasPagamento.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        tblFormasPagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "Dinheiro", null},
                {"", "Pix", null},
                {null, "Cartão de crédito", null},
                {null, "Cartão de débito", null},
                {null, "Cartão de benefícios", null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFormasPagamento.setRowHeight(55);
        jScrollPane1.setViewportView(tblFormasPagamento);
        if (tblFormasPagamento.getColumnModel().getColumnCount() > 0) {
            tblFormasPagamento.getColumnModel().getColumn(0).setResizable(false);
            tblFormasPagamento.getColumnModel().getColumn(0).setPreferredWidth(0);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConcluirVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbImprimirComprovante)
                            .addComponent(cbPagarDepois))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(lblValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cbPagarDepois)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbImprimirComprovante)
                .addGap(18, 18, 18)
                .addComponent(btnConcluirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPagarDepoisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPagarDepoisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPagarDepoisActionPerformed

    private void btnConcluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConcluirVendaActionPerformed

    private void cbImprimirComprovanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbImprimirComprovanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbImprimirComprovanteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JTable tabela = new JTable();
                dlgFormaPagamento dialog = new dlgFormaPagamento(new javax.swing.JFrame(), true, tabela);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void mostrarValorTotal() {
        double valorTotal = PedidoUtils.calcularValorTotal(tabelaPedido);
        lblValorTotal.setText("R$ " + String.format("%.2f", valorTotal).replace(".", ","));
    }

    private void configurarColunasTabela() {
        // Evita erro se o número de colunas mudar
        if (tblFormasPagamento.getColumnCount() >= 3) {
            tblFormasPagamento.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblFormasPagamento.getColumnModel().getColumn(1).setPreferredWidth(300);
            tblFormasPagamento.getColumnModel().getColumn(2).setPreferredWidth(100);

            // Se quiser travar redimensionamento de alguma coluna:
            // tabelaClientes.getColumnModel().getColumn(1).setResizable(false);
        }
    }

    private void configurarTabelaComIcones(JTable tabela) {
        // Ícones redimensionados (32x32 para combinar com altura da linha 55)
        ImageIcon iconeDinheiro = carregarIconeRedimensionado("/imagens/dinheiro.png", 50, 50);
        ImageIcon iconeCartaoCredito = carregarIconeRedimensionado("/imagens/cartao-de-credito.png", 60, 60);
        ImageIcon iconeCartaoDebito = carregarIconeRedimensionado("/imagens/cartao-de-debito.png", 60, 60);
        ImageIcon iconeCartaoBeneficio = carregarIconeRedimensionado("/imagens/cartoes-de-beneficios.png", 50, 50);
        ImageIcon iconePix = carregarIconeRedimensionado("/imagens/pix.png", 50, 50);
        ImageIcon iconeOutros = carregarIconeRedimensionado("/imagens/outros.png", 50, 50);

        // Colunas da tabela
        String[] colunas = {"Forma", "Descrição", "Valor"};

        // Dados da tabela com ícones
        Object[][] dados = {
            {iconeDinheiro, "Dinheiro"},
            {iconeCartaoCredito, "Crédito"},
            {iconeCartaoDebito, "Débito"},
            {iconeCartaoBeneficio, "Benefício"},
            {iconePix, "Pix"},
            {iconeOutros, "Outras formas"}
        };

        DefaultTableModel modelo = new DefaultTableModel(dados, colunas) {
            @Override
            public Class<?> getColumnClass(int coluna) {
                return coluna == 0 ? Icon.class : String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tabela.setModel(modelo);
        tabela.setRowHeight(55);
    }

    private ImageIcon carregarIconeRedimensionado(String caminho, int largura, int altura) {
        try {
            URL imagemURL = getClass().getResource(caminho);
            if (imagemURL != null) {
                BufferedImage imagemOriginal = ImageIO.read(imagemURL);
                BufferedImage imagemRedimensionada = new BufferedImage(largura, altura, BufferedImage.TYPE_INT_ARGB);

                Graphics2D g2d = imagemRedimensionada.createGraphics();
                g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
                g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                g2d.drawImage(imagemOriginal, 0, 0, largura, altura, null);
                g2d.dispose();

                return new ImageIcon(imagemRedimensionada);
            } else {
                System.err.println("Imagem não encontrada: " + caminho);
                return null;
            }
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConcluirVenda;
    private javax.swing.JCheckBox cbImprimirComprovante;
    private javax.swing.JCheckBox cbPagarDepois;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JTable tblFormasPagamento;
    // End of variables declaration//GEN-END:variables
}
